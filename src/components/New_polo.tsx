/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { CanvasTexture } from 'three';
import { useFrame, useThree } from '@react-three/fiber';

const IMAGE_SRC =
  'https://images.pexels.com/photos/337909/pexels-photo-337909.jpeg?cs=srgb&dl=pexels-pavlo-luchkovski-337909.jpg&fm=jpg';

export function Model(props: any) {
  const { gl } = useThree();
  const group = useRef();

  const canvas: HTMLCanvasElement | null = document.querySelector('.canvas-front.lower-canvas');
  const canvasBack: HTMLCanvasElement | null = document.querySelector('.canvas-back.lower-canvas');
  const canvasLeft: HTMLCanvasElement | null = document.querySelector('.canvas-left.lower-canvas');
  const canvasRight: HTMLCanvasElement | null = document.querySelector(
    '.canvas-right.lower-canvas'
  );

  // // console.log(document.getElementsByTagName('canvas'));

  const ctx = canvas?.getContext('2d');
  const ctxBack = canvasBack?.getContext('2d');
  const ctxLeft = canvasLeft?.getContext('2d');
  const ctxRight = canvasRight?.getContext('2d');
  // console.log('ctx', ctx, canvas);

  const texture = new CanvasTexture(ctx.canvas);
  const textureBack = new CanvasTexture(ctxBack.canvas);
  const textureLeft = new CanvasTexture(ctxLeft.canvas);
  const textureRight = new CanvasTexture(ctxRight.canvas);

  texture.flipY = false;
  texture.anisotropy = gl.capabilities.getMaxAnisotropy();
  texture.needsUpdate = true;

  textureBack.flipY = false;
  textureBack.anisotropy = gl.capabilities.getMaxAnisotropy();
  textureBack.needsUpdate = true;

  textureLeft.flipY = false;
  textureLeft.anisotropy = gl.capabilities.getMaxAnisotropy();
  textureLeft.needsUpdate = true;

  textureRight.flipY = false;
  textureRight.anisotropy = gl.capabilities.getMaxAnisotropy();
  textureRight.needsUpdate = true;

  useFrame(() => {
    // console.log(editor?.canvas.toJSON());
    texture.needsUpdate = true;
    textureBack.needsUpdate = true;
    textureLeft.needsUpdate = true;
    textureRight.needsUpdate = true;
  });

  const model: any = useGLTF('/models/new_polo.glb');
  const { nodes, materials } = model;
  return (
    <group
      {...props}
      dispose={null}
      ref={group}

      // position={[0, -100, 0]}
    >
      <group name="M_Polo_T-shirt_obj" position={[0, 1.67, 0]}>
        <mesh
          name="M_Polo_T-shirt_obj_1"
          geometry={nodes['M_Polo_T-shirt_obj_1'].geometry}
          material={materials.Main}
        />
        <mesh
          name="M_Polo_T-shirt_obj_2"
          geometry={nodes['M_Polo_T-shirt_obj_2'].geometry}
          material={materials.Collar}
        />
      </group>
      <mesh
        name="M_Polo_T-shirt_obj001"
        geometry={nodes['M_Polo_T-shirt_obj001'].geometry}
        material={materials.Button}
        position={[0, 1.67, 0]}
      />
      <mesh
        name="M_Polo_T-shirt_obj002"
        geometry={nodes['M_Polo_T-shirt_obj002'].geometry}
        material={materials.Button}
        position={[0, 1.67, 0]}
      />
      <mesh
        name="M_Polo_T-shirt_obj007"
        geometry={nodes['M_Polo_T-shirt_obj007'].geometry}
        material={materials.Button}
        position={[0, 1.67, 0]}
      />
      <mesh
        name="M_Polo_T-shirt_obj008"
        geometry={nodes['M_Polo_T-shirt_obj008'].geometry}
        material={materials['Front Vinyl']}
        position={[0, 1.67, 0]}
      >
        <meshStandardMaterial attach="material" map={texture}>
          <canvasTexture attach="map" image={canvas} />
        </meshStandardMaterial>
      </mesh>
      <mesh
        name="M_Polo_T-shirt_obj009"
        geometry={nodes['M_Polo_T-shirt_obj009'].geometry}
        material={materials['Back Vinyl']}
        position={[0, 1.67, 0]}
      >
        <meshStandardMaterial attach="material" map={textureBack}>
          <canvasTexture attach="map" image={canvasBack} />
        </meshStandardMaterial>
      </mesh>

      <mesh
        name="M_Polo_T-shirt_obj010"
        geometry={nodes['M_Polo_T-shirt_obj010'].geometry}
        material={materials['Right Arm Vinyl']}
        position={[-0.92, 2.02, -0.19]}
      >
        <meshStandardMaterial attach="material" map={textureRight}>
          <canvasTexture attach="map" image={canvasRight} />
        </meshStandardMaterial>
      </mesh>

      <mesh
        name="M_Polo_T-shirt_obj011"
        geometry={nodes['M_Polo_T-shirt_obj011'].geometry}
        material={materials['Left Arm Vinyl ']}
        position={[0, 1.67, 0]}
      >
        <meshStandardMaterial attach="material" map={textureLeft}>
          <canvasTexture attach="map" image={canvasLeft} />
        </meshStandardMaterial>
      </mesh>
    </group>
  );
}

useGLTF.preload('/models/new_polo.glb');
